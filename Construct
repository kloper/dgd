# -*- mode:cperl -*-
# 
# Copyright (c) Dimitry Kloper <kloper@users.sf.net> 2002-2012
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt)
# 
# This file is part of dgd library (http://dgd.sf.net).
#
# Construct -- main construction file for DGD
#

use strict;
use Data::Dumper;
use Getopt::Long;
use Cwd;
use File::Find;
use File::Path;

use Cons::Common;
use Cons::Toolset;
use Cons::VersionControl;

my %options = ( 'verbose' => 1 );


our $toolset = Cons::Toolset->getopt( %options );

die if( !defined( $toolset ) );
    
map { 
    if( /^-/ ) {
	say( "error: unknown option $_", 'verbose' => 1 );
	die;
    } elsif( /^clean$/ ) {
	clean( cwd() );
	return 1;
    } else {
	say( "error: unknown command $_", 'verbose' => 1 );
	die;
    }
} @ARGV;

our $version    = Cons::VersionControl->open(); 
our $BLIB       = "#blib";

Export qw(BLIB toolset options version);

Default $BLIB;

Build map( "$_/Conscript", qw(cons/config dgd test samples doc) );

sub clean {
    my ($root) = @_;
    find( sub {
	      if( /\.(o|a|so|dpo|obj|exe|lib|pdb|idb|pch|ilk)$/i ) {
		  print "removing $File::Find::name\n";
		  unlink;
	      } 
	  }, $root );

    my $dirs = [];
    find( sub {
	      if( /Debug[\/\\]*$/ and -d ) {
		  push @$dirs, $File::Find::name;
	      } elsif( /Release[\/\\]*$/ and -d ) {
		  push @$dirs, $File::Find::name;
	      }
	  }, $root );
    if( scalar( @$dirs ) ) { 
	rmtree( $dirs, 1 );
    }
}
