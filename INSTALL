
DGD Library INSTALL
======================================

Copyright (c) 2002. Dimitry Kloper <kloper@users.sourceforge.net>

Available from http://sourceforge.net/projects/dgd

Building DGD
============

DGD makes extensive use of C++ boost (http://www.boost.org). You
need boost 1.25.0 or later to compile DGD. 

STLPort (http://www.stlport.com) was used during DGD
developing. It is recommended but not required. In fact DGD works well
with the native VC++ version of STL.

From version 0.1.0.0 DGD uses Cons (http://www.gnu.org/software/cons/)
as its primary build system. Thus, you need perl (tested with perl 5.6.1) 
to build DGD. 

The following steps are required to build DGD:

 1. Download and build C++ boost and (optionally) STLPort libraries.
 2. Download DGD distribution (dgd-XXX.tar.gz from
    http://sourceforge.net/projects/dgd, here XXX refers to the package
    version). 
 3.  gzip -dc dgd-XXX.tar.gz | tar -xf - 
    Do this in the same directory where boost library is installed or in
    directory one or two levels behind. DGD configure script will
    search for boost library.
 4. On Win32 built with VC++ run:
    perl -I cons ./cons/cons.pl -- --toolset=msvc70,cygwin,boost
 5. For cygwin and Linux
    perl -I cons ./cons/cons.pl -- --toolset=gcc,boost

Important Cons Options
======================

  * --verbose=int - defines verbosity level. 0 means quiet mode. 
  * --build=[Debug|Release] - used to trigger the build type. Default is Debug.
  * --toolset=toolset_list - defines which toolsets will be used for build.
    Currently the following toolsets are supported: msvc70, gcc, cygwin, clo,
    boost, stlport, doxygen.
  * --[toolset]-root-dir=string - overrides the root directory of particular 
    toolset. By default Cons will try to guess the location. 

Additional packages
===================

You will need some additional programs if you want to change DGD. 

 * clo++ -  (http://pmade.org/software/clo++/) generates command line parser. 
   Use this if you want to change dgd/src/dgDebugOpt.xml. 
   




