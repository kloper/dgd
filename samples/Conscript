# -*- mode:cperl -*-
# 
# Copyright (c) Dimitry Kloper <kloper@users.sf.net> 2002-2012
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt)
# 
# This file is part of dgd library (http://dgd.sf.net).
#
# Conscript -- build file for dgd samples
#

use Data::Dumper;
Import qw(BLIB toolset version);
    
my $ruleset  = $toolset->env();

die if( !defined( $ruleset ) );

$ruleset->{'LDFLAGS'} .= q( -mthreads -mconsole);
$ruleset->{'CXXFLAGS'} .= q( -mthreads -isystem %BOOST_INCLUDE);

our $BUILD      = $toolset->option( 'build' );
our $INCLUDE    = [ "%BOOST_INCLUDE", "$BLIB/include" ];
our $LIBPATH    = [ "$BLIB/lib", "%BOOST_LIB" ];
our $LIBS       =  join( " ", qw(-lboost_filesystem%BOOST_LIB_SUFFIX
                               -lboost_system%BOOST_LIB_SUFFIX
                               -lboost_thread%BOOST_LIB_SUFFIX
                               -lboost_program_options%BOOST_LIB_SUFFIX));

Link $BUILD => 'src';

my $buildenv   = new cons( %{$ruleset},
			   'CPPPATH'  => $INCLUDE,
			   'LIBPATH'  => $LIBPATH,
			   'LIBS'     => $LIBS );

for my $sample (qw(stack)) {
    my $TARGET = "$BUILD/$sample%SUFEXE";

    KeepPrecious $buildenv $TARGET;
    Program $buildenv $TARGET, "$BUILD/$sample.cpp";
    Install $buildenv "$BLIB/bin", $TARGET;
}
