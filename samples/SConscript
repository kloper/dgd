# -*- mode:python -*-
# 
# Copyright (c) Dimitry Kloper <kloper@users.sf.net> 2002-2012
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt)
# 
# This file is part of dgd library (http://dgd.sf.net).
#
# samples/SConscript -- construction file for dgd/samples
#

import os 

Import('env', 'version')

env = env.Clone()

env.Append(LDFLAGS = ['-mthreads', '-mconsole'])
env.Append(CXXFLAGS = ['-mthreads', '-DBOOST_TEST_DYN_LINK', '-isystem', '$BOOSTINCDIR'])
env.Append(CPPPATH = ['#blib/include'])
env.Append(LIBPATH = ['#blib/lib', '$BOOSTLIBDIR'])

variant = env.subst('$VARIANT')
env.VariantDir(variant, 'src')


boost_libs = map( lambda lib: lib + '$BOOST_LIB_SUFFIX',
                              [ 'boost_regex',
                                'boost_filesystem',
                                'boost_system',
                                'boost_thread',
                                'boost_program_options' ])

sample_src = { 'stack': ['stack.cpp'] }

for sample, srclist in sample_src.iteritems():
    prog = env.Program(target = os.path.join(variant,sample), 
                       source = map( lambda fname: os.path.join(variant,fname), 
                                     srclist ),
                       LIBS = boost_libs )
    env.Install('#blib/bin', prog)
