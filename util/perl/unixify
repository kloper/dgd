#!/bin/sh

pname=$0
binname=`dirname $pname`/unixify.bin

if ! test -f $binname; then

cat > unixify.c <<EOF
#include <stdio.h>
#include <sys/stat.h>

int main( int argc, char** argv ) {
   FILE *in, *out;
   struct stat fs;

   if( argc != 3 ) {
      fprintf( stderr, "Usage: %s input output\n", argv[0] );
      return 1;
   }

   if( (in = fopen( argv[1], "rb" )) == NULL ) {
      fprintf( stderr, "Can't open file %s\n", argv[1] );
      return 1;
   }

   if( fstat( fileno(in), &fs ) == -1 ) {
      fprintf( stderr, "Can't stat file %s\n", argv[1] );
      return 1;
   }

   if( (out = fopen( argv[2], "wb" )) == NULL ) {
      fprintf( stderr, "Can't open file %s\n", argv[2] );
      return 1;
   }

   fchmod( fileno(out), fs.st_mode );

   while( !feof( in ) ) {
      char ch = fgetc( in );
      if( !feof( in ) && ch != '\r' && (unsigned int)ch < 128 )
	 fputc( ch, out );
   }

   fclose( in );
   fclose( out );
   return 0;
}
EOF
gcc -g unixify.c -o $binname
rm -f unixify.c
if test $? != 0; then
   echo "Can't compile unixify.bin"
   exit;
fi 
fi


if test -d $1; then
echo "unixify dir $1"
/usr/bin/find $1 -type f -exec $pname {} \;
elif test -f $1; then
echo "unixify file $1"
$binname $1 tmp.u
mv tmp.u $1
else 
echo "Bad file or dir $1"
exit 
fi


